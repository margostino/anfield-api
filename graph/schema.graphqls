enum PlayerPosition {
  GKP
  DEF
  MID
  FWD
}

type ChipPlay {
  chipName: String!
  numPlayed: Int!
}
type TopElementInfo {
  id: Int!
  points: Int!
}

type StatsTeam {
  Name: String!
  Value: Float!
  Description: String!
}

type Gameweek {
  Kickoff: String!
  TeamAName: String!
  ScoreTeamA: Int!
  TeamHName: String!
  ScoreTeamH: Int!
  Stadium: String!
}

type H2H {
  StatsTeamA: [StatsTeam]
  StatsTeamH: [StatsTeam]
  Gameweeks: [Gameweek]
}

type Fixture {
  code: Int!
  event: Int
  finished: Boolean
  finishedProvisional: Boolean
  id: Int!
  kickoffTime: String
  minutes: Int
  provisionalStartTime: Boolean
  started: Boolean
  teamA: Int
  teamAName: String
  teamAScore: Int
  teamH: Int
  teamHName: String
  teamHScore: Int
  stats: [Stat]
  teamHDifficulty: Int
  teamADifficulty: Int
  pulseId: Int
  teamAPulseId: Int
  teamHPulseId: Int
}

type Stat {
  identifier: String
  teamA: [TeamStat]
  teamH: [TeamStat]
}

type TeamStat {
  value: Int
  element: Int
}

type Event {
  id: Int!
  name: String!
  deadlineTime: String!
  averageEntryScore: Int!
  finished: Boolean!
  dataChecked: Boolean!
  highestScoringEntry: Int!
  deadlineTimeEpoch: Int!
  deadlineTimeGameOffset: Int!
  highestScore: Int!
  isPrevious: Boolean!
  isCurrent: Boolean!
  isNext: Boolean!
  cupLeaguesCreated: Boolean!
  h2hKoMatchesCreated: Boolean!
  rankedCount: Int!
  chipPlays: [ChipPlay!]!
  mostSelected: Int!
  mostTransferredIn: Int!
  topElement: Int!
  topElementInfo: TopElementInfo!
  transfersMade: Int!
  mostCaptained: Int!
  mostViceCaptained: Int!
  fixtures: [Fixture!]!
}

type Team {
  id: Int!
  name: String!
  shortName: String!
	strengthOverallHome: Int!,
  strengthOverallAway: Int!,
  strengthAttackHome: Int!,
  strengthAttackAway: Int!,
  strengthDefenceHome: Int!,
  strengthDefenceAway: Int!,
  pulseID: Int!
}

type Player {
  id: Int!
  firstName: String!
  secondName: String!
  webName: String!
  news: String!
  newsAdded: String!
  team: String!
  position: PlayerPosition!
  chanceOfPlayingNextRound: Int!
  chanceOfPlayingThisRound: Int!
  costChangeEvent: Int!
  costChangeEventFall: Int!
  costChangeStart: Int!
  costChangeStartFall: Int!
  dreamteamCount: Int!
  elementType: Int!
  epNext: String!
  epThis: String!
  eventPoints: Int!
  form: String!
  inDreamteam: Boolean!
  nowCost: Int!
  photo: String!
  pointsPerGame: String!
  selectedByPercent: String!
  special: Boolean!
  squadNumber: Int!
  status: String!
  teamCode: Int!
  totalPoints: Int!
  transfersIn: Int!
  transfersInEvent: Int!
  transfersOut: Int!
  transfersOutEvent: Int!
  valueForm: String!
  valueSeason: String!
  minutes: Int!
  goalsScored: Int!
  assists: Int!
  cleanSheets: Int!
  goalsConceded: Int!
  ownGoals: Int!
  penaltiesSaved: Int!
  penaltiesMissed: Int!
  yellowCards: Int!
  redCards: Int!
  saves: Int!
  bonus: Int!
  bps: Int!
  influence: String!
  creativity: String!
  threat: String!
  ictIndex: String!
  starts: Int!
  expectedGoals: String!
  expectedAssists: String!
  expectedGoalInvolvements: String!
  expectedGoalsConceded: String!
  influenceRank: Int!
  influenceRankType: Int!
  creativityRank: Int!
  creativityRankType: Int!
  threatRank: Int!
  threatRankType: Int!
  ictIndexRank: Int!
  ictIndexRankType: Int!
  cornersAndIndirectFreekicksOrder: Int!
  cornersAndIndirectFreekicksText: String!
  directFreekicksOrder: Int!
  directFreekicksText: String!
  penaltiesOrder: Int!
  penaltiesText: String!
  expectedGoalsPer90: Float!
  savesPer90: Float!
  expectedAssistsPer90: Float!
  expectedGoalInvolvementsPer90: Float!
  expectedGoalsConcededPer90: Float!
  goalsConcededPer90: Float!
  nowCostRank: Int!
  nowCostRankType: Int!
  formRank: Int!
  formRankType: Int!
  pointsPerGameRank: Int!
  pointsPerGameRankType: Int!
  selectedRank: Int!
  selectedRankType: Int!
  startsPer90: Float!
  cleanSheetsPer90: Float!
}

type Query {
  teams: [Team]
  players: [Player]
  events: [Event]
  team(shortName:String!): Team
  player(webName:String!): Player
  event(id:Int!): Event
  h2h(teamAShortName:String!, teamHShortName:String!): H2H
}